import{u as d}from"./chunks/index.812c4548.js";import{j as u,k as i}from"./chunks/index.508c0b38.js";import{f as g,w as T,o as C,c as h,D as l,b as e,a2 as _,z as r,a as s,t as F,F as b,x as a,B as v,N as f}from"./chunks/framework.0d72c9ec.js";const k=a("br",null,null,-1),P=s(" currentTheme: "),E=s("   systemTheme: "),x={setup(A){let{systemTheme:p,currentTheme:t,changeTheme:c}=d(),n=g(p=="dark");const m=o=>{c(o?"dark":"light")};return T(()=>t.value,o=>{n.value=o=="dark"}),(o,D)=>(C(),h(b,null,[l(e(u),{value:e(n),"onUpdate:value":D[0]||(D[0]=y=>_(n)?n.value=y:n=y),onC_change:m},null,8,["value"]),k,P,l(e(i),{type:"primary",clean:"",size:"m"},{default:r(()=>[s(F(e(t)),1)]),_:1}),E,l(e(i),{type:"primary",clean:"",size:"m"},{default:r(()=>[s(F(e(p)),1)]),_:1})],64))}},S=a("h1",{id:"theme-主题",tabindex:"-1"},[s("Theme 主题 "),a("a",{class:"header-anchor",href:"#theme-主题","aria-label":'Permalink to "Theme 主题"'},"​")],-1),N=a("p",null,[s("Combo UI 提供了两种默认主题（light、dark）、两种切换默认主题的方法（"),a("code",null,"useTheme"),s("、"),a("code",null,"ThemeProvider"),s("）、自定义主题。")],-1),q=a("p",null,"不使用自定义主题的情况下，Combo UI 的主题会自动跟随系统的深色模式开关变化。",-1),I=f(`<h2 id="usetheme" tabindex="-1">useTheme <a class="header-anchor" href="#usetheme" aria-label="Permalink to &quot;useTheme&quot;">​</a></h2><p>在任意位置使用 <code>useTheme</code> 控制应用主题。</p><p><code>useTheme</code> 方法调用了浏览器 API，因此请确保在非 SSR 的环境中使用。如果在 SSR 中使用，请考虑<code>CThemeProvider</code>，或确保在组件挂载后再调用 <code>useTheme</code>。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useTheme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@congb19/combo-ui</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> currentTheme</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> systemTheme</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> changeTheme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useTheme</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">light</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(systemTheme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> currentTheme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span></span>
<span class="line"></span></code></pre></div><h2 id="themeprovider" tabindex="-1">ThemeProvider <a class="header-anchor" href="#themeprovider" aria-label="Permalink to &quot;ThemeProvider&quot;">​</a></h2><p>将你的应用嵌套在 <code>CThemeProvider</code> 内控制应用主题。</p><p>在这种情况下，Combo UI 控制主题的方法是，手动给外层 html 元素赋予 className (<code>&#39;light&#39;</code> 或 <code>&#39;dark&#39;</code>)。事实上，很多框架也是这么做的（例如 vitepress、Element Plus），你的应用也可以基于这一点，自行进行暗黑模式的适配。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">CThemeProvider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">your-app</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">your-app</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">CThemeProvider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> global </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementByTagName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">global</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">className </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义主题" tabindex="-1">自定义主题 <a class="header-anchor" href="#自定义主题" aria-label="Permalink to &quot;自定义主题&quot;">​</a></h2><p>将主题 css 文件通过文本字符串的形式引入，并通过 changeTheme 方法引入即可。想要切换回默认时，传参改为<code>&#39;light&#39;</code>或<code>&#39;dark&#39;</code>即可。</p><p>在这种情况下，Combo UI 的主题将不再跟随系统变化，完全由应用自行控制。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useTheme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@congb19/combo-ui</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> customTheme </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx.css</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> changeTheme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useTheme</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(customTheme)</span></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">light</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="todo" tabindex="-1">todo <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;todo&quot;">​</a></h2><ul><li>主题生成器</li><li>使用主题生成器生成自定义主题 css 文件。</li></ul>`,15),O=JSON.parse('{"title":"Theme 主题","description":"","frontmatter":{},"headers":[],"relativePath":"guides/theme.md"}'),V={name:"guides/theme.md"},R=Object.assign(V,{setup(A){return(p,t)=>{const c=v("ClientOnly");return C(),h("div",null,[S,N,q,l(c,null,{default:r(()=>[l(x)]),_:1}),I])}}});export{O as __pageData,R as default};
