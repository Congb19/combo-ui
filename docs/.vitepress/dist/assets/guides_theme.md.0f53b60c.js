import{u as g}from"./chunks/index.1ff45cfc.js";import{g as _,h as C,i as T}from"./chunks/index.d9154c64.js";import{f as D,w as h,h as v,o as A,y as b,z as c,D as o,b as s,a2 as f,a as p,t as m,x as l,B as k,c as P,N as E}from"./chunks/framework.0d72c9ec.js";const x=l("br",null,null,-1),N=l("br",null,null,-1),S=p(" currentTheme: "),q=p(" systemTheme: "),B={setup(u){let a=D(document.getElementsByTagName("html")[0].className.includes("dark")),n=D(""),e=D(""),{systemTheme:t,currentTheme:r,changeTheme:d}=g();return n.value=t.value,e.value=r.value,h(()=>t.value,()=>{n.value=t.value,e.value=r.value}),h(()=>a.value,y=>{d(y?"dark":"light"),n.value=t.value,e.value=r.value}),v(()=>{}),(y,i)=>(A(),b(s(T),null,{default:c(()=>[x,o(s(_),{value:s(a),"onUpdate:value":i[0]||(i[0]=F=>f(a)?a.value=F:a=F)},null,8,["value"]),N,S,o(s(C),{type:"primary",clean:"",size:"m"},{default:c(()=>[p(m(s(e)),1)]),_:1}),q,o(s(C),{type:"primary",clean:"",size:"m"},{default:c(()=>[p(m(s(n)),1)]),_:1})]),_:1}))}},I=l("h1",{id:"theme-主题",tabindex:"-1"},[p("Theme 主题 "),l("a",{class:"header-anchor",href:"#theme-主题","aria-label":'Permalink to "Theme 主题"'},"​")],-1),V=l("p",null,"Combo UI 提供了两种默认主题（light、dark）、两种切换默认主题的方法（useTheme、ThemeProvider）、自定义主题。",-1),U=l("p",null,"不使用自定义主题的情况下，Combo UI 的主题会自动跟随系统的深色模式开关变化。",-1),w=E(`<h2 id="usetheme" tabindex="-1">useTheme <a class="header-anchor" href="#usetheme" aria-label="Permalink to &quot;useTheme&quot;">​</a></h2><p>在组件内使用 useTheme 控制应用主题。</p><p>请确保在非 SSR 的环境中使用。如果在 SSR 中使用，请确保在组件挂载后再调用 useTheme。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useTheme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@congb19/combo-ui</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> currentTheme</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> systemTheme</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> changeTheme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useTheme</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(systemTheme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> currentTheme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span></span>
<span class="line"></span></code></pre></div><h2 id="themeprovider" tabindex="-1">ThemeProvider <a class="header-anchor" href="#themeprovider" aria-label="Permalink to &quot;ThemeProvider&quot;">​</a></h2><p>将你的应用嵌套在 CThemeProvider 内控制应用主题。</p><p>在这种情况下，Combo UI 控制主题的方法是，手动给外层 html 元素赋予 className (<code>light</code> 或 <code>dark</code>)。事实上，很多框架也是这么做的（例如 vitepress、Element Plus），你的应用也可以基于这一点，自行进行暗黑模式的适配。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">CThemeProvider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">your-app</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">your-app</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">CThemeProvider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> global </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementByTagName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">global</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">className </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义主题" tabindex="-1">自定义主题 <a class="header-anchor" href="#自定义主题" aria-label="Permalink to &quot;自定义主题&quot;">​</a></h2><p>将主题 css 文件通过文本字符串的形式引入，并通过 changeTheme 方法引入即可。想要切换回默认时，传参改为<code>light</code>即可。</p><p>在这种情况下，Combo UI 的主题将不再跟随系统变化，完全由应用自己控制。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useTheme</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@congb19/combo-ui</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> customTheme </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx.css</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> changeTheme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useTheme</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(customTheme)</span></span>
<span class="line"><span style="color:#82AAFF;">changeTheme</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">light</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="todo" tabindex="-1">todo <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;todo&quot;">​</a></h2><ul><li>主题生成器</li><li>使用主题生成器生成自定义主题 css 文件。</li></ul>`,15),j=JSON.parse('{"title":"Theme 主题","description":"","frontmatter":{},"headers":[],"relativePath":"guides/theme.md"}'),O={name:"guides/theme.md"},J=Object.assign(O,{setup(u){return(a,n)=>{const e=k("ClientOnly");return A(),P("div",null,[I,V,U,o(e,null,{default:c(()=>[o(B)]),_:1}),w])}}});export{j as __pageData,J as default};
